<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.minimal.mapper.wechat.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.minimal.entity.model.Article" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="sketch" property="sketch" jdbcType="VARCHAR" />
    <result column="back_img" property="backImg" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="VARCHAR" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" />
    <result column="collect_num" property="collectNum" jdbcType="INTEGER" />
    <result column="share_num" property="shareNum" jdbcType="INTEGER" />
    <result column="read_num" property="readNum" jdbcType="INTEGER" />
    <result column="comment_num" property="commentNum" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_sys_recommend" property="isSysRecommend" jdbcType="INTEGER" />
    <result column="is_subject" property="isSubject" jdbcType="INTEGER" />
    <result column="is_original" property="isOriginal" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"  javaType="java.sql.Timestamp"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
  </resultMap>

  <resultMap id="articleResultMap" type="com.minimal.common.api.dto.ArticleDto" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="sketch" property="sketch" jdbcType="VARCHAR" />
    <result column="back_img" property="backImg" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="VARCHAR" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" />
    <result column="read_num" property="readNum" jdbcType="INTEGER" />
    <result column="comment_num" property="commentNum" jdbcType="INTEGER" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap  id="articleMap" type="java.util.Map">
    <result column="id" property="id"/>
    <result column="title" property="title"/>
  </resultMap>

  <select id="selectPreviousArticleByCreateTime" resultMap="articleMap" parameterType="java.sql.Timestamp">
    select id,title,create_time from article where is_delete = 0 and category_id='1' and is_subject = 0
    <if test="createTime != null">
       <![CDATA[ and unix_timestamp(create_time) < unix_timestamp(#{createTime,jdbcType=DATE})]]>
    </if>
    ORDER BY create_time DESC LIMIT 1
  </select>


  <select id="selectNextArticleByCreateTime" resultMap="articleMap" parameterType="java.sql.Timestamp">
    select id,title,create_time from article where is_delete = 0 and category_id='1' and is_subject = 0
    <if test="createTime != null">
      <![CDATA[ and unix_timestamp(create_time) > unix_timestamp(#{createTime,jdbcType=DATE})]]>
    </if>
    ORDER BY create_time ASC LIMIT 1
  </select>

  <select id="selectByArticleId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from article where is_delete = 0
      <if test="articleId != null and articleId != ''" >
        and id = #{articleId,jdbcType=VARCHAR}
     </if>
      ORDER BY create_time DESC LIMIT 1
  </select>


  <select id="selectHotArticleOrderByCommentNum" resultMap="BaseResultMap" parameterType="java.lang.String">
    select art.id,art.sketch,art.back_img,art.title,art.category_id,art.like_num,art.read_num,
    art.author_name,art.create_time,art.update_time,(select count(*) from article_comment where article_id=art.id) as comment_num
    from article art where art.is_delete=0 and art.category_id ='1' ORDER BY comment_num DESC
  </select>

  <select id="selectHotArticleOrderByLikeNum" resultMap="BaseResultMap" parameterType="java.lang.String">
    select art.id,art.sketch,art.back_img,art.title,art.category_id,art.read_num,
    art.author_name,art.create_time,art.update_time,(select count(*) from article_like where article_id=art.id) as like_num
    from article art where art.is_delete=0 and art.category_id ='1' ORDER BY like_num DESC
  </select>

  <select id="selectHotArticleOrderByTypeId" resultMap="articleResultMap" parameterType="java.lang.String">
    select art.id,art.sketch,art.back_img,art.title,art.category_id,art.read_num,
    art.author_name,art.create_time,art.update_time,
    (select count(*) from article_like where article_id=art.id) as like_num,
    (select count(*) from article_comment where article_id=art.id) as comment_num,
    (select count(*) from article_collect where article_id=art.id) as collect_num
    from article art where art.is_delete=0 and art.category_id ='1' and art.is_subject = 0
  </select>

  <select id="selectHomeArticles" resultMap="articleResultMap" parameterType="java.lang.String">
    select art.id,art.sketch,art.back_img,art.title,art.category_id,art.read_num,
    art.author_name,art.create_time,art.update_time,(select count(*) from article_like where article_id=art.id) as like_num
    from article art where art.is_delete=0 and art.category_id ='1' and art.is_subject = 0
  </select>

  <select id="selectSearchBykey" resultMap="articleResultMap" parameterType="java.lang.String">
    select art.id,art.sketch,art.back_img,art.title,art.category_id,art.read_num,
    art.author_name,art.create_time,art.update_time,(select count(*) from article_like where article_id=art.id) as like_num,
    (select count(*) from article_comment where article_id=art.id) as comment_num
    from article art where art.is_delete=0 and art.category_id ='1' and art.is_subject = 0
    <if test="key != null and key != ''" >
       and title like #{key,jdbcType=VARCHAR}
    </if>
    ORDER BY update_time DESC
  </select>
</mapper>